Current Work
============

Add some "solid" objects, and use overlap detection to kill the sparks.
	Just as a prelude to pixel collision detection.

Pixel Overlap
	Find the intersection of their world rectangles
	Onto an additional buffer A
	Can we render the first using just the alpha channel (ignore RGB)
	and then multiply by the 2nd's alpha channel

	Non ovelapping would then be close to 0
	So that we don't have to copy large data arrays...
		Render the four quarters of A onto B (regular rendering)
		If any pixels are not near zero, we have overlap (but in 1/4 the number of pixels).
		Repeat this operation (this time each quarter of B onto C) and keep going, till we have just one pixel.
		Now read the entire pixel buffer (of one pixel!!!)
	http://wiki.lwjgl.org/wiki/Render_to_Texture_with_Frame_Buffer_Objects_(FBO).html

https://www.khronos.org/opengl/wiki/Pixel_Transfer
https://www.khronos.org/opengl/wiki/Fragment_Shader
https://www.khronos.org/opengl/wiki/Logical_Operation

BUGS
====

Attributes now depends on paratask-core, and therefore a running game also depends upon it. Grr.
	I only want the EDITOR to depend on paratask-core.
	Have a factory method for Attributes, which checks Class.forName( "uk...paratask...Parameter" )
		It either returns Attributes (which has no parameter stuff) of DesignAttributes
		Then cast wherever they are used in the editor.
		Add an extension function : SceneActor.designAttributes() which does the cast. Ditto for Costume

InputPicker :
	Java FX key code name "Number Sign" does not map to anything in enum class Key
	"Windows" is this meta?
	Shift, Control, alt etc don't work either.

New Features
============

Movements

Use the Heading class wherever there is xxxDegress and xxxRadians being converted.

SceneEditor
	Other attribute types :
		Position Vector2f : @Attribute( AttributeType.RELATIVE_POSITION )
		Position Vector2f : @Attribute( AttributeType.ABSOLUTE_POSITION )

		Velocity field (new!) @Attribute( AttributeType.VELOCITY )
		VelocityXY field (new!) @Attribute( AttributeType.VELOCITY_XY )
			Or should these be combined, backed by X,Y, but with degrees and speed getters?
			Or backed by either

		When used for projectile factory, I want two different spreads - either a "box" shape (XY), or a
			cone (angle, magniture)
		VelocityXY is clearly a Vector2f !
		Velocity is AngleAndMagnitude

	Need to split HeadingMovement into two.
		One half changes the heading.
		The other half moves at a given speed (in a particular heading).
		So, we have a IntputHeadingAction (used by Bee)

		and a TurningAction (used by coin)
		Both are wrapped by a SpeedAction
		InputSpeed (used by Bee) and ConstantSpeed (used by Coin)
		We can then have a RotateAction, which wraps a Heading action, to rotate in the direction of travel.
			(Used by Bee).

Editor
	Allow a texture to be reloaded (Texture and ImageCache).
	
	Prevent deletion of textures used by a pose
	Prevent deletion of poses used by a costume

	Pose tab to have a list of costumes using it
		In a "minor tab"?
		Or just a button which opens all costumes using that pose.

When renaming an item, who's name is used in a scene, we need to keep track of renamed items,
	and update all scenes when the resource file is saved.
	Costume and Font only?

Mouse
	Hide the mouse, so it can be replaced by an actor
	Find Actors at a point
		Overlapping, or using pixel data

Ensure Textures are deleted when removed from resources (Use finialise?).

Add my own "runLater", which will call the code at the end of a tick.
	I could use this to delete textures (i.e. put the runLater call in Texture.finalize).

Costumes to inherit?
	Just the events?

Fonts
	https://github.com/SilverTiger/lwjgl3-tutorial/wiki/Fonts
	Allow loading of multiple ranges of characters.

View clipping.

Merge scenes from two or more scene files
	SceneResource to have a set of "includes", so that merging multiple .scene files is done automatically.

Tags
	Consider special methods on Tagged and TagManager to use inline reified typed methods to return Roles of the
		specified type. Hmm, can't do that - It will still need a cast, so reified isn't helpful.
	Maybe also using a Class as the tag.
	How about finding roles with tag x AND tag y. Tag x OR tag y?
		Or should this be done by the client?
	Nearby - Only return those in a the surrounding N blocks.
		N=0 when it will be used for collision detection.
		Create a new TaggedRole interface.

Later
=====

Undo/Redo in scene editor

JBox2d integration

Auto detection of a grid to aid splitting a texture into Pose's rectangles.

Split the project into multiple modules
	core
	demo
	editor

Load pose meta-data from SVG files.
	Any objects with a name pose_XXX, where XXX is the pose name.
	Can get the offesetX,Y from the object's center of rotation.
	Can still use GIMP, by linking pngs and exporting the pngs from GIMP.

Scene Editor


Much Later
==========

When adding an actor to a scene, also add child actors as dictated by the costume

StageConstraint

New Game Wizard
	Choice of a completely blank project, or a "Hello World"
	Hello World will have a font, a Play director and a Splash director
		Splash will display some simple text and a button to lauch "level01"
		Maybe also have a "Me" Role

Code Templates
	Create one of Director, Role, Tags

