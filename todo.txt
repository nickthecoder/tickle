Current Work
============

Rename MouseButtonHandler to Listener. Ditto for mousemove.


Next
====

Support enums as attributes.
	Message Button, calls Director or Producer

Undo/Redo in scene editor
	Changes :
		New ActorResource
		Delete ActorResource
		ActorResource changes stage
		Edit ActorResource
			Can be changed by editing Parameters or by dragging
			When a Parameter change event is fired, store the name of the parameter, and its old and new value.
			When dragging a handle, just let the above handle it?
		OR add a new listeners on ActorResource (each field has a set(v) method).
			When moving an actorResource (or set of), then treat this differently??

		Note. dragging multiple ActorResources may need to be handled in a different way???
		Ignore snap data for now.


Edit Shape enclosed in a scroll pane, and Pose can be scaled.

BUGS
====

Window is always resizable (despite the value in GameInfo)
	Resizing doesn't adjust the views, or the viewport. Just get empty rectangles.
	The default behaviour should adjust the views
		Can be overriden in Producer though.

Allow scaling of circles - convert to a polygon if the scales factors are different

Scene.adjustActors is not being called directly. Should it?

InputPicker :
	Java FX key code name "Number Sign" does not map to anything in enum class Key
	"Windows" is this meta?
	Shift, Control, alt etc don't work either.

Possible Optimisations
----------------------

PixelOverlapping
	Don't clear the whole overlapTexture
	Consider making "lineTexture" a smaller, fixed width, and doing a nested loop over x.

StageView.findActorsAt and findRolesAt to use Neighbourhood.
	Maybe have an interface, and a Slow implementation which iterates over all actors as the default.
	Any Stage/StageView can then replace the Slow implementation with the Neighbourhood.
	Maybe Stage should (optionally) have a Neighbourhood.

New Features
------------

Option to load textures only when needed.
	Texture
Editor to allow resources to be reloaded.

Key input to have a "ghosting" test, where multiple key presses are displayed, to help avoid certain key combinations.
	Also create a GUI suitable for launching from within the game to adjust *existing* inputs.
	Include "reset"
	Save to a separate file in user's config directory.
		<aybe make it part of the (un-coded) "Preferences" class

In-Game input mapper, allowing user to change existing inputs (but not add new ones).
	JavaFX or OpenGL?
	OpenGL
		Game is not reliant on JavaFX or Paratask
		Can use LWJGL's input stuff, therefore no confusion over keyboard mappings.
		Harder to code though.

Allow text style to be overriden in the SceneEditor.
	Only save the overridden values if they differ from the Costume's values.

Editor
	Allow a texture to be reloaded (Texture and ImageCache).
	
	Prevent deletion of textures used by a pose
	Prevent deletion of poses used by a costume

	Pose tab to have a list of costumes using it
		In a "minor tab"?
		Or just a button which opens all costumes using that pose.

PoseTab should show the whole Texture, with a single shaded rectangle to show the position.
	Double click to auto adjust the pose's rectangle and offset.

Ensure Textures are deleted when removed from resources (Use finalise?).

Later
=====

TextStyle to have an extraSpacing property which causes letters to be moved further appart
	Ditto for extra line height.

Game based on "flocking" :	https://www.youtube.com/watch?v=M028vafB0l8

Split the project into multiple modules
	core
	demo
	editor

RevealStageView
	Age Of Empires style outline of actors hidden behind buildings.
		Use a z buffer?
	Render all buildings and movables in one pass as a normal IsometricStageView (ordered based on Actor's Y position)
		Render all movables to an off-screen buffer using their outline images. (Tagged "REVEAL")
		Render all buildings to an off-screen buffer using just their masks (Tagged "HIDES")
		Combine the two using logical AND
		Render the result to the window.
	Note. when rendering the outlines, it would be nice to do this is two stages, one for a white outline,
	and again for a coloured thinner image coloured based on who's side the character belongs to.
	Rather than have multiple overlapping views, have one compound view, so that we only need to scroll the compound view.
FogOfWarStageView
	Filter which objects to render based on their proximity to friendly units.
UncharteredStageView
	Draw the scenery to off-screen buffer
	Draw white blobs on revealed places
	Merge using logical AND

Much Later
==========

New Game Wizard
	Choice of a completely blank project, or a "Hello World"
	Hello World will have a font, a Play director and a Splash director
		Splash will display some simple text and a button to lauch "level01"
		Maybe also have a "Player" Role

