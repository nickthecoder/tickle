Current Work
============

Next
====

Scene to define one (or more?) scenes to include
	Use this to split pill popper levels into their maze, and the items in the maze.
	SceneEditor to show the included level (but cannot edit it).

PoseChoiceParameter, which is a MenuButton with a hierarchical menu, rather than a simple ChoiceParameter.
Ditto for CostumeChoiceParameter

BUGS
====

Scene.adjustActors is not being called directly. Should it?

Renaming a costume doesn't update ActorResource in scenes that use it.

findActorAt doesn't work for rotated text that is not bottom? left aligned (as the offset isn't taken into account when doing the rotation maths).

Attributes now depends on paratask-core, and therefore a running game also depends upon it. Grr.
	I only want the EDITOR to depend on paratask-core.
	Have a factory method for Attributes, which checks Class.forName( "uk...paratask...Parameter" )
		It either returns Attributes (which has no parameter stuff) of DesignAttributes
		Then cast wherever they are used in the editor.
		Add an extension function : SceneActor.designAttributes() which does the cast. Ditto for Costume
	Also, "UglyPrint" is in paratask-core.

InputPicker :
	Java FX key code name "Number Sign" does not map to anything in enum class Key
	"Windows" is this meta?
	Shift, Control, alt etc don't work either.


Possible Optimisatins
---------------------
	
PixelOverlapping
	Don't clear the whole overlapTexture
	Consider making "lineTexture" a smaller, fixed width, and doing a nested loop over x.


New Features
------------

Key input to have a "ghosting" test, where multiple key presses are displayed, to help avoid certain key combinations.
	Also create a GUI suitable for launching from within the game to adjust *existing* inputs.
	Include "reset"
	Save to a separate file in user's config directory.
		<aybe make it part of the (un-coded) "Preferences" class

Allow text style to be overriden in the SceneEditor.
	Only save the overridden values if they differ from the Costume's values.

Add some "solid" objects, and use overlap detection to kill the sparks.
	Just as a prelude to pixel collision detection.

Allow a Layout to specify a (set of?) scene paths to merge whenever a scene using this layout is started
	This allows standard stages to be included (such as a "glass" stage, showing score, "pause" etc)
	(i.e. when starting to PLAY the scene, not when designing it).
	Hmm, Maybe it SHOULD be loaded when designing too (but is never editable)
Also allow a SceneResource to specify a (set of?) scene paths to be merged.
	This will allow a "background" scene to be chosen per actual scene.


Pose : Allow a "mirrored" version (X,Y or Both)
	Just make the rectangle have -ve widths/heights???
	Use this to implement "Bee" without the special transformation

Editor
	Allow a texture to be reloaded (Texture and ImageCache).
	
	Prevent deletion of textures used by a pose
	Prevent deletion of poses used by a costume

	Pose tab to have a list of costumes using it
		In a "minor tab"?
		Or just a button which opens all costumes using that pose.

When renaming an item, who's name is used in a scene, we need to keep track of renamed items,
	and update all scenes when the resource file is saved.
	Costume and Font only?

PoseTab should show the whole Texture, with a single shaded rectangle to show the position.
	Double click to auto adjust the pose's rectangle and offset.
	Make it a resuable copmonent, which can show one or many shaded rectangles.

Mouse
	Find Actors at a point
		Overlapping, or using pixel data

Ensure Textures are deleted when removed from resources (Use finalise?).

Add my own "runLater", which will call the code at the end of a tick.
	I could use this to delete textures (i.e. put the runLater call in Texture.finalize).


Later
=====

Add drag handles to the CostumeTab shape editor.

Allow jBox2D to be optional (i.e. do not need to include the jar (and the logger) if it isn't used by the game.

Allow fonts to have multiple outlines i.e. one myfont.png may have myfont-thinOutline.png and myfont.blurredOutline.png
	Could specify an outline name in TextStyle, and lazily load the extra texture.

TextStyle to have an extraSpacing property which causes letters to be moved further appart
	Ditto for extra line height.

Create a simpler GUI that a "published" game can use to let players change the input mappings.

Game based on "flocking" :	https://www.youtube.com/watch?v=M028vafB0l8

Undo/Redo in scene editor

Split the project into multiple modules
	core
	demo
	editor

Load pose meta-data from SVG files.
	Any objects with a name pose_XXX, where XXX is the pose name.
	Can get the offesetX,Y from the object's center of rotation.
	Can still use GIMP, by linking pngs and exporting the pngs from GIMP.

RevealStageView
	Age Of Empires style outline of actors hidden behind buildings.
	Render all buildings and movables in one pass as a normal IsometricStageView (ordered based on Actor's Y position)
		Render all movables to an off-screen buffer using their outline images. (Tagged "REVEAL")
		Render all buildings to an off-screen buffer using just their masks (Tagged "HIDES")
		Combine the two using logical AND
		Render the result to the window.
	Note. when rendering the outlines, it would be nice to do this is two stages, one for a white outline,
	and again for a coloured thinner image coloured based on who's side the character belongs to.
	Rather than have multiple overlapping views, have one compound view, so that we only need to scroll the compound view.
FogOfWarStageView
	Filter which objects to render based on their proximity to friendly units.
UncharteredStageView
	Draw the scenery to off-screen buffer
	Draw white blobs on revealed places
	Merge using logical AND

Much Later
==========

New Game Wizard
	Choice of a completely blank project, or a "Hello World"
	Hello World will have a font, a Play director and a Splash director
		Splash will display some simple text and a button to lauch "level01"
		Maybe also have a "Player" Role

